{"createElementFromStr":{"prefix":"createElementFromStr","scope":"javascript,javascriptreact","body":"// You can create DOM element from string\n\nexport const createElementFromStr1 = (body = '<div></div>') => {\n  return new DOMParser().parseFromString(body, 'text/html').body\n    .firstElementChild\n}\n\nexport const createElementFromStr2 = (body) => {\n  const element = document.createElement('template')\n  element.innerHTML = body\n  return element.content\n}\n\nexport const createElementFromStr3 = (body) => {\n  const element = document.createElement('template')\n  element.innerHTML = body\n  return element.content.firstElementChild\n}"},"isElementVisible":{"prefix":"isElementVisible","scope":"javascript,javascriptreact","body":"// Check if an element is visible\n\nconst isVisible1 = (element) => {\n  const position = element.getBoundingClientRect()\n  if (position.top >= 0 && position.bottom <= innerHeight) return true\n  else if (position.top < innerHeight && position.bottom >= 0) return 'true'\n  else return false\n}\n\nconst isVisible2 = (element) => {\n  const position = element.getBoundingClientRect()\n\n  if (position.top >= 0 && position.bottom <= innerHeight) return 3\n  if (position.top < 0 && position.bottom > 0 && position.bottom < innerHeight)\n    return 2\n  if (\n    position.top >= 0 &&\n    position.top < innerHeight &&\n    position.bottom > innerHeight\n  )\n    return 1\n  return 0\n}"},"randomNumber":{"prefix":"randomNumber","scope":"javascript,javascriptreact","body":"// Get a random number\n\nexport const randomNumber = (max = 1, min = 0) => {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}"},"selectElement":{"prefix":"selectElement","scope":"javascript,javascriptreact","body":"// Physically select a text/image of a element\n\nconst selectElement = (element) => {\n  if (document.body.createTextRange) {\n    const range = document.body.createTextRange()\n    range.moveToElementText(element)\n    range.select()\n  } else if (window.getSelection) {\n    const selection = window.getSelection()\n    const range = document.createRange()\n    range.selectNodeContents(element)\n    selection.removeAllRanges()\n    selection.addRange(range)\n  }\n  return element.textContent.trim()\n}"},"sortElements":{"prefix":"sortElements","scope":"javascript,javascriptreact","body":"// Sort a list of node\n\nconst sortElements = (selectors) => {\n  let i, switching, b, shouldSwitch\n  switching = true\n  while (switching) {\n    switching = false\n    b = document.querySelectorAll(selectors)\n    for (i = 0; i < b.length - 1; i++) {\n      shouldSwitch = false\n      if (\n        b[i].textContent.toLowerCase().trim() >\n        b[i + 1].textContent.toLowerCase().trim()\n      ) {\n        shouldSwitch = true\n        break\n      }\n    }\n    if (shouldSwitch) {\n      b[i].parentNode.insertBefore(b[i + 1], b[i])\n      switching = true\n    }\n  }\n}"},"wait":{"prefix":"wait","scope":"javascript,javascriptreact","body":"// Wait for sometime...\n\nconst wait = (duration) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, duration)\n  })\n}"}}